{"version":3,"sources":["Register.js","Login.js","Attack.js","App.js","serviceWorker.js","index.js"],"names":["Register","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleChange","event","user","state","target","name","value","setState","status","register","bind","assertThisInitialized","_this2","console","log","preventDefault","fetch","method","headers","Accept","Content-Type","body","JSON","stringify","then","res","json","res2","catch","err","classes","react_default","a","createElement","className","align","onSubmit","TextField_default","margin","InputLabelProps","root","cssLabel","focused","cssFocused","InputProps","cssOutlinedInput","notchedOutline","label","placeholder","onChange","variant","type","select","textField","SelectProps","native","MenuProps","menu","Button_default","color","classNames","cssRoot","Component","withStyles","theme","container","display","flexWrap","marginLeft","spacing","unit","marginRight","dense","marginTop","width","&$cssFocused","orange","cssUnderline","&:after","borderBottomColor","&$cssFocused $notchedOutline","borderColor","bootstrapRoot","label + &","bootstrapInput","borderRadius","position","backgroundColor","palette","common","white","border","fontSize","padding","transition","transitions","create","fontFamily","join","&:focus","boxShadow","bootstrapFormLabel","&:before","getContrastText","&:hover","Login","login","username","password","indexOf","token","error","attack_results","Attack","number_of_attacks","attack","number","i","push","setTimeout","log_attacks","map","item","onClick","styles","flexGrow","default_tabStyle","active_tabStyle","indicator","App","react_router_dom","react_router","path","render","_ref","location","react","Tabs_default","fullWidth","scrollButtons","Tab_default","component","Link","to","active_tab","src_Register","src_Login","src_Attack","Boolean","window","hostname","match","ReactDOM","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.ece8a084.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport orange from '@material-ui/core/colors/deepOrange';\r\nimport classNames from 'classnames';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nconst styles = theme => ({\r\n  container: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n  },\r\n  textField: {\r\n    marginLeft: theme.spacing.unit,\r\n    marginRight: theme.spacing.unit,\r\n  },\r\n  dense: {\r\n    marginTop: 16,\r\n  },\r\n  menu: {\r\n    width: 200,\r\n  },\r\n  root: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n  },\r\n  margin: {\r\n    margin: theme.spacing.unit,\r\n  },\r\n  cssLabel: {\r\n    '&$cssFocused': {\r\n      color: orange[500],\r\n    },\r\n  },\r\n  cssFocused: {},\r\n  cssUnderline: {\r\n    '&:after': {\r\n      borderBottomColor: orange[500],\r\n    },\r\n  },\r\n  cssOutlinedInput: {\r\n    '&$cssFocused $notchedOutline': {\r\n      borderColor: orange[500],\r\n    },\r\n  },\r\n  notchedOutline: {},\r\n  bootstrapRoot: {\r\n    'label + &': {\r\n      marginTop: theme.spacing.unit * 3,\r\n    },\r\n  },\r\n  bootstrapInput: {\r\n    borderRadius: 4,\r\n    position: 'relative',\r\n    backgroundColor: theme.palette.common.white,\r\n    border: '1px solid #ced4da',\r\n    fontSize: 16,\r\n    width: 'auto',\r\n    padding: '10px 12px',\r\n    transition: theme.transitions.create(['border-color', 'box-shadow']),\r\n    // Use the system font instead of the default Roboto font.\r\n    fontFamily: [\r\n      '-apple-system',\r\n      'BlinkMacSystemFont',\r\n      '\"Segoe UI\"',\r\n      'Roboto',\r\n      '\"Helvetica Neue\"',\r\n      'Arial',\r\n      'sans-serif',\r\n      '\"Apple Color Emoji\"',\r\n      '\"Segoe UI Emoji\"',\r\n      '\"Segoe UI Symbol\"',\r\n    ].join(','),\r\n    '&:focus': {\r\n      borderRadius: 4,\r\n      borderColor: '#80bdff',\r\n      boxShadow: '0 0 0 0.2rem rgba(0,123,255,.25)',\r\n    },\r\n  },\r\n  bootstrapFormLabel: {\r\n    fontSize: 18,\r\n  },\r\n\r\n  select: {\r\n    '&:before': {\r\n        borderColor: orange[500],\r\n    },\r\n    '&:after': {\r\n        borderColor: orange[500],\r\n    }\r\n  },\r\n\r\n  cssRoot: {\r\n    color: theme.palette.getContrastText(orange[500]),\r\n    backgroundColor: orange[500],\r\n    '&:hover': {\r\n      backgroundColor: orange[700],\r\n    },\r\n  },\r\n\r\n});\r\n\r\nclass Register extends Component {\r\n\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      user: {},\r\n      status: 'Ready!'\r\n    };\r\n\r\n    this.register = this.register.bind(this)\r\n  }\r\n\r\n  handleChange= event => {\r\n    let user  =this.state.user;\r\n    user[event.target.name]=event.target.value\r\n    this.setState({\r\n       user,\r\n    });\r\n  };\r\n\r\n  register(event){\r\n    console.log(event);\r\n    event.preventDefault();\r\n        let user  =this.state.user\r\n\r\n        fetch('http://localhost:40001/user', {\r\n            method: 'post',\r\n            headers: {\r\n                'Accept': 'application/json, text/plain, */*',\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify(user)\r\n        })\r\n        .then(res=>{return res.json()})\r\n        .then(res2=>{\r\n          console.log(res2);\r\n          if(res2.status==='OK'){\r\n            res2.status=\"User was created!\";\r\n          }\r\n          this.setState({\r\n            status: res2.status\r\n        });\r\n        }).catch(err=>{\r\n          console.log(err);\r\n        })\r\n  }\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n    return (\r\n      \r\n      <div className=\"Register\">\r\n      <form  align=\"center\" onSubmit={this.register}>\r\n      <br/>\r\n\r\n      <h2>Registration</h2>  \r\n      <p>Register a new User.</p>\r\n\r\n      <TextField\r\n        className={classes.margin}\r\n        InputLabelProps={{\r\n          classes: {\r\n            root: classes.cssLabel,\r\n            focused: classes.cssFocused,\r\n          },\r\n        }}\r\n        InputProps={{\r\n          classes: {\r\n            root: classes.cssOutlinedInput,\r\n            focused: classes.cssFocused,\r\n            notchedOutline: classes.notchedOutline,\r\n          },\r\n        }}\r\n        label=\"Name\"\r\n          //className={classes.textField}\r\n          placeholder=\"what's your name?\"\r\n          onChange={this.handleChange}\r\n          margin=\"normal\"\r\n          variant=\"outlined\"\r\n          name=\"name\"\r\n      /><br/>\r\n\r\n      <TextField\r\n        className={classes.margin}\r\n        InputLabelProps={{\r\n          classes: {\r\n            root: classes.cssLabel,\r\n            focused: classes.cssFocused,\r\n          },\r\n        }}\r\n        InputProps={{\r\n          classes: {\r\n            root: classes.cssOutlinedInput,\r\n            focused: classes.cssFocused,\r\n            notchedOutline: classes.notchedOutline,\r\n          },\r\n        }}\r\n        label=\"Username\"\r\n          //className={classes.textField}\r\n          placeholder=\"Use your email.\"\r\n          onChange={this.handleChange}\r\n          margin=\"normal\"\r\n          variant=\"outlined\"\r\n          name=\"username\"\r\n      /><br/>\r\n      <TextField\r\n        className={classes.margin}\r\n        InputLabelProps={{\r\n          classes: {\r\n            root: classes.cssLabel,\r\n            focused: classes.cssFocused,\r\n          },\r\n        }}\r\n        InputProps={{\r\n          classes: {\r\n            root: classes.cssOutlinedInput,\r\n            focused: classes.cssFocused,\r\n            notchedOutline: classes.notchedOutline,\r\n          },\r\n        }}\r\n        label=\"Password\"\r\n          //className={classes.textField}\r\n          placeholder=\"Your secret word.\"\r\n          onChange={this.handleChange}\r\n          margin=\"normal\"\r\n          variant=\"outlined\"\r\n          name=\"password\"\r\n          type=\"password\"\r\n      /><br/>\r\n\r\n        <TextField\r\n          \r\n          select\r\n          label=\"Roles\"\r\n          name=\"role\"\r\n          placeholder=\"Pick the user role.\"\r\n          className={classes.textField}\r\n          InputLabelProps={{\r\n            classes: {\r\n              root: classes.cssLabel,\r\n              focused: classes.cssFocused,\r\n            },\r\n          }}\r\n          InputProps={{\r\n            classes: {\r\n              root: classes.cssOutlinedInput,\r\n              focused: classes.cssFocused,\r\n              notchedOutline: classes.notchedOutline,\r\n            },\r\n          }}\r\n          onChange={this.handleChange}\r\n          SelectProps={{\r\n            native: true,\r\n            MenuProps: {\r\n              className: classes.menu,\r\n            },\r\n          }}\r\n          \r\n          \r\n          variant=\"outlined\"\r\n        >\r\n          <option value=\"\" />\r\n            <option value={'DEFAULT_ACCESS'}>DEFAULT_ACCESS</option>\r\n            <option value={'MANAGER'}>MANAGER</option>\r\n            <option value={'ADMIN'}>ADMIN</option>\r\n        </TextField><br/>\r\n\r\n\r\n        <Button variant=\"contained\" color=\"primary\"\r\n        className={classNames(classes.margin, classes.cssRoot)}\r\n        type=\"submit\"\r\n        >\r\n        Submit\r\n        </Button>\r\n\r\n\r\n      </form>\r\n      <center><div className=\"status-text\"> {this.state.status}</div></center>\r\n\r\n      </div>\r\n      \r\n    );\r\n  }\r\n}\r\n\r\nRegister.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(Register);\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport orange from '@material-ui/core/colors/deepOrange';\r\nimport classNames from 'classnames';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nconst styles = theme => ({\r\n  container: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n  },\r\n  textField: {\r\n    marginLeft: theme.spacing.unit,\r\n    marginRight: theme.spacing.unit,\r\n  },\r\n  dense: {\r\n    marginTop: 16,\r\n  },\r\n  menu: {\r\n    width: 200,\r\n  },\r\n  root: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n  },\r\n  margin: {\r\n    margin: theme.spacing.unit,\r\n  },\r\n  cssLabel: {\r\n    '&$cssFocused': {\r\n      color: orange[500],\r\n    },\r\n  },\r\n  cssFocused: {},\r\n  cssUnderline: {\r\n    '&:after': {\r\n      borderBottomColor: orange[500],\r\n    },\r\n  },\r\n  cssOutlinedInput: {\r\n    '&$cssFocused $notchedOutline': {\r\n      borderColor: orange[500],\r\n    },\r\n  },\r\n  notchedOutline: {},\r\n  bootstrapRoot: {\r\n    'label + &': {\r\n      marginTop: theme.spacing.unit * 3,\r\n    },\r\n  },\r\n  bootstrapInput: {\r\n    borderRadius: 4,\r\n    position: 'relative',\r\n    backgroundColor: theme.palette.common.white,\r\n    border: '1px solid #ced4da',\r\n    fontSize: 16,\r\n    width: 'auto',\r\n    padding: '10px 12px',\r\n    transition: theme.transitions.create(['border-color', 'box-shadow']),\r\n    // Use the system font instead of the default Roboto font.\r\n    fontFamily: [\r\n      '-apple-system',\r\n      'BlinkMacSystemFont',\r\n      '\"Segoe UI\"',\r\n      'Roboto',\r\n      '\"Helvetica Neue\"',\r\n      'Arial',\r\n      'sans-serif',\r\n      '\"Apple Color Emoji\"',\r\n      '\"Segoe UI Emoji\"',\r\n      '\"Segoe UI Symbol\"',\r\n    ].join(','),\r\n    '&:focus': {\r\n      borderRadius: 4,\r\n      borderColor: '#80bdff',\r\n      boxShadow: '0 0 0 0.2rem rgba(0,123,255,.25)',\r\n    },\r\n  },\r\n  bootstrapFormLabel: {\r\n    fontSize: 18,\r\n  },\r\n\r\n  select: {\r\n    '&:before': {\r\n        borderColor: orange[500],\r\n    },\r\n    '&:after': {\r\n        borderColor: orange[500],\r\n    }\r\n  },\r\n\r\n  cssRoot: {\r\n    color: theme.palette.getContrastText(orange[500]),\r\n    backgroundColor: orange[500],\r\n    '&:hover': {\r\n      backgroundColor: orange[700],\r\n    },\r\n  },\r\n\r\n});\r\n\r\nclass Login extends Component {\r\n\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      user: {},\r\n      status: 'Ready!'\r\n    };\r\n\r\n    this.login = this.login.bind(this)\r\n  }\r\n\r\n  handleChange= event => {\r\n    let user  =this.state.user;\r\n    user[event.target.name]=event.target.value\r\n    this.setState({\r\n       user,\r\n    });\r\n  };\r\n\r\n  login(event){\r\n    console.log(event);\r\n    event.preventDefault();\r\n        let user  =this.state.user\r\n\r\n        fetch('http://localhost:40001/login?username='+user.username\r\n                +'&password='+user.password, {\r\n            method: 'get',\r\n            headers: {\r\n                'Accept': 'application/json, text/plain, */*',\r\n                'Content-Type': 'application/json'\r\n            }\r\n            \r\n        })\r\n        .then(res=>{return res.json()})\r\n        .then(res2=>{\r\n          console.log(res2);\r\n          if(res2.status.indexOf('OK')!==-1){//ok\r\n              res2.status=\"Token: \"+res2.token\r\n          }else if(res2.error.indexOf('ERROR')!==-1){//error\r\n            res2.status=res2.error;\r\n          }\r\n          this.setState({\r\n            status: res2.status\r\n        });\r\n        }).catch(err=>{\r\n          console.log(err);\r\n        })\r\n  }\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n    return (\r\n      \r\n      <div className=\"Register\">\r\n      <form  align=\"center\" onSubmit={this.login}>\r\n      <br/>\r\n      <h2>Simple Login</h2>  \r\n        <p>Test the LOGIN operation.</p>\r\n\r\n      <TextField\r\n        className={classes.margin}\r\n        InputLabelProps={{\r\n          classes: {\r\n            root: classes.cssLabel,\r\n            focused: classes.cssFocused,\r\n          },\r\n        }}\r\n        InputProps={{\r\n          classes: {\r\n            root: classes.cssOutlinedInput,\r\n            focused: classes.cssFocused,\r\n            notchedOutline: classes.notchedOutline,\r\n          },\r\n        }}\r\n        label=\"Username\"\r\n          //className={classes.textField}\r\n          placeholder=\"Use your email.\"\r\n          onChange={this.handleChange}\r\n          margin=\"normal\"\r\n          variant=\"outlined\"\r\n          name=\"username\"\r\n      /><br/>\r\n      <TextField\r\n        className={classes.margin}\r\n        InputLabelProps={{\r\n          classes: {\r\n            root: classes.cssLabel,\r\n            focused: classes.cssFocused,\r\n          },\r\n        }}\r\n        InputProps={{\r\n          classes: {\r\n            root: classes.cssOutlinedInput,\r\n            focused: classes.cssFocused,\r\n            notchedOutline: classes.notchedOutline,\r\n          },\r\n        }}\r\n        label=\"Password\"\r\n          //className={classes.textField}\r\n          placeholder=\"Your secret word.\"\r\n          onChange={this.handleChange}\r\n          margin=\"normal\"\r\n          variant=\"outlined\"\r\n          name=\"password\"\r\n          type=\"password\"\r\n      /><br/>\r\n\r\n        <Button variant=\"contained\" color=\"primary\"\r\n        className={classNames(classes.margin, classes.cssRoot)}\r\n        type=\"submit\"\r\n        >\r\n        Login\r\n        </Button>\r\n\r\n\r\n      </form>\r\n      <center><div className=\"status-text\"> {this.state.status}</div></center>\r\n\r\n      </div>\r\n      \r\n    );\r\n  }\r\n}\r\n\r\nLogin.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(Login);\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport orange from '@material-ui/core/colors/deepOrange';\r\nimport classNames from 'classnames';\r\nimport Button from '@material-ui/core/Button';\r\n\r\n\r\nconst styles = theme => ({\r\n  container: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n  },\r\n  textField: {\r\n    marginLeft: theme.spacing.unit,\r\n    marginRight: theme.spacing.unit,\r\n  },\r\n  dense: {\r\n    marginTop: 16,\r\n  },\r\n  menu: {\r\n    width: 200,\r\n  },\r\n  root: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n  },\r\n  margin: {\r\n    margin: theme.spacing.unit,\r\n  },\r\n  cssLabel: {\r\n    '&$cssFocused': {\r\n      color: orange[500],\r\n    },\r\n  },\r\n  cssFocused: {},\r\n  cssUnderline: {\r\n    '&:after': {\r\n      borderBottomColor: orange[500],\r\n    },\r\n  },\r\n  cssOutlinedInput: {\r\n    '&$cssFocused $notchedOutline': {\r\n      borderColor: orange[500],\r\n    },\r\n  },\r\n  notchedOutline: {},\r\n  bootstrapRoot: {\r\n    'label + &': {\r\n      marginTop: theme.spacing.unit * 3,\r\n    },\r\n  },\r\n  bootstrapInput: {\r\n    borderRadius: 4,\r\n    position: 'relative',\r\n    backgroundColor: theme.palette.common.white,\r\n    border: '1px solid #ced4da',\r\n    fontSize: 16,\r\n    width: 'auto',\r\n    padding: '10px 12px',\r\n    transition: theme.transitions.create(['border-color', 'box-shadow']),\r\n    // Use the system font instead of the default Roboto font.\r\n    fontFamily: [\r\n      '-apple-system',\r\n      'BlinkMacSystemFont',\r\n      '\"Segoe UI\"',\r\n      'Roboto',\r\n      '\"Helvetica Neue\"',\r\n      'Arial',\r\n      'sans-serif',\r\n      '\"Apple Color Emoji\"',\r\n      '\"Segoe UI Emoji\"',\r\n      '\"Segoe UI Symbol\"',\r\n    ].join(','),\r\n    '&:focus': {\r\n      borderRadius: 4,\r\n      borderColor: '#80bdff',\r\n      boxShadow: '0 0 0 0.2rem rgba(0,123,255,.25)',\r\n    },\r\n  },\r\n  bootstrapFormLabel: {\r\n    fontSize: 18,\r\n  },\r\n\r\n  select: {\r\n    '&:before': {\r\n        borderColor: orange[500],\r\n    },\r\n    '&:after': {\r\n        borderColor: orange[500],\r\n    }\r\n  },\r\n\r\n  cssRoot: {\r\n    color: theme.palette.getContrastText(orange[500]),\r\n    backgroundColor: orange[500],\r\n    '&:hover': {\r\n      backgroundColor: orange[700],\r\n    },\r\n  },\r\n\r\n});\r\n\r\nlet attack_results = [];\r\n\r\nclass Attack extends Component {\r\n\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      number_of_attacks: 0,\r\n      status: 'Ready!',\r\n      attack_results\r\n    };\r\n\r\n    this.attack = this.attack.bind(this)\r\n  }\r\n\r\n  handleChange= event => {\r\n    let number_of_attacks  =this.state.number_of_attacks;\r\n    number_of_attacks=event.target.value\r\n    this.setState({\r\n        number_of_attacks,\r\n        attack_results: []\r\n    });\r\n  };\r\n\r\n  async attack(event){\r\n\r\n    const number=this.state.number_of_attacks;\r\n\r\n    this.setState({\r\n        number_of_attacks: 0\r\n    });\r\n\r\n    let attack_results  =this.state.attack_results\r\n\r\n    for(let i=0;i<number;i++){\r\n        const username=\"bad.user\"+i+\"@gmail.com\";\r\n        const password=\"Kansascity1*\";\r\n        let res2= await fetch('http://localhost:40001/login?username='+username\r\n                +'&password='+password, {\r\n            method: 'get',\r\n            headers: {\r\n                'Accept': 'application/json, text/plain, */*',\r\n                'Content-Type': 'application/json'\r\n            },\r\n            \r\n        }).then(res=>{return res.json()});\r\n\r\n        attack_results.push(\"[USERNAME]:\"+username+\", [PASSWORD]: \"+password+\",[RESULT]: \"+res2.status+\": \"+res2.error);\r\n          this.setState({\r\n            attack_results: attack_results\r\n        });\r\n        setTimeout(() => {\r\n            \r\n        }, 100);\r\n    }\r\n        \r\n  }\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n\r\n    let log_attacks = this.state.attack_results.map(function(item){\r\n        return <li> {item} </li>;\r\n      });\r\n\r\n    return (\r\n      \r\n      <div className=\"Register\">\r\n      <form  align=\"center\">\r\n      <br/>\r\n    <h2>Brute Force Attack!!!</h2>  \r\n    <p>This test executes the LOGIN event with diferent usernames and password to see the MyHealthPass component behavior.</p>\r\n\r\n      <TextField\r\n        className={classes.margin}\r\n        InputLabelProps={{\r\n          classes: {\r\n            root: classes.cssLabel,\r\n            focused: classes.cssFocused,\r\n          },\r\n        }}\r\n        InputProps={{\r\n          classes: {\r\n            root: classes.cssOutlinedInput,\r\n            focused: classes.cssFocused,\r\n            notchedOutline: classes.notchedOutline,\r\n          },\r\n        }}\r\n        label=\"Number of fake logins\"\r\n        //className={classes.textField}\r\n        placeholder=\"Use your email.\"\r\n        onChange={this.handleChange}\r\n        margin=\"normal\"\r\n        variant=\"outlined\"\r\n        name=\"fake_logins_number\"\r\n        value={this.state.number_of_attacks}\r\n      /><br/>\r\n\r\n        <Button variant=\"contained\" color=\"primary\"\r\n        className={classNames(classes.margin, classes.cssRoot)}\r\n        //type=\"submit\"\r\n        onClick={this.attack}\r\n        >\r\n        Attack!!!\r\n        </Button>\r\n\r\n\r\n      </form>\r\n      <center><div className=\"status-text\"> {this.state.status}</div></center>\r\n        <ul>\r\n        {log_attacks}\r\n        </ul>\r\n\r\n      </div>\r\n      \r\n    );\r\n  }\r\n}\r\n\r\nAttack.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(Attack);","import React, { Component,Fragment } from 'react';\nimport Register from './Register';\nimport Login from './Login';\nimport Attack from './Attack';\nimport './App.css';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Tabs from \"@material-ui/core/Tabs\";\nimport Tab from \"@material-ui/core/Tab\";\nimport orange from '@material-ui/core/colors/deepOrange';\nimport { Switch, Route, Link, BrowserRouter } from \"react-router-dom\";\n\nconst styles=  {\n  root: {\n    flexGrow: 1,\n  },\n\n  default_tabStyle:{\n    color: 'black',\n    fontSize:10,\n    \n   },\n   \n  active_tabStyle:{\n    fontSize:11,\n    color: 'black',\n   },\n   indicator: {\n    backgroundColor: orange[500],\n  },\n};\n\nclass App extends Component {\n\n  state = {\n    value: 0,\n  };\n\n  handleChange = (event, value) => {\n    this.setState({ value });\n  };\n   \n  render() {\n    const { classes } = this.props;\n\n    return (\n      <BrowserRouter>\n      <div className=\"title\">\n      <center><h1>My Health Pass Basic Client</h1></center>\n      <br/>\n      \n      <Route\n          path=\"/\"\n          render={({ location }) => (\n            <Fragment>\n              <Tabs value={this.state.value}  \n            onChange={this.handleChange}\n            fullWidth={true}\n            scrollButtons=\"auto\"\n            classes={{\n              indicator: classes.indicator\n            }}\n              >\n                <Tab label=\"Register\" component={Link} to=\"/register\" className=\n            {this.state.value===0 ? classes.active_tab :classes.default_tabStyle} />\n                <Tab label=\"Login\" component={Link} to=\"/login\" className=\n            {this.state.value===1 ? classes.active_tab :classes.default_tabStyle} />\n                <Tab\n                  label=\"Attack!!!\"\n                  component={Link}\n                  to=\"/attack\"\n                  className=\n            {this.state.value===2 ? classes.active_tab :classes.default_tabStyle}\n                />\n              </Tabs>\n\n              <Switch>\n                <Route path=\"/register\" render={() => <Register/>} />\n                <Route path=\"/login\" render={() => <Login/>} />\n                <Route path=\"/attack\" render={() => <Attack/>} />\n              </Switch>\n            </Fragment>\n          )}\n        />      \n      \n      </div>\n      </BrowserRouter>\n    );\n  }\n}\n\nApp.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from \"react-router-dom\";\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <BrowserRouter>\n        <App />\n    </BrowserRouter>\n, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}